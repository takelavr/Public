Оформление результата
*Отправляется как один zip-архив с git-репозитарием или ссылка на репозитарий на github.com.
*В проекте в папке docs документация (при необходимости), в папке liquibase Liquibase и миграции к нему.
*Проект собирается Maven.
*Для тестового задания предполагается логин/пароль MySQL root/root, имя базы данных distance-calculator.
*Data source в WildFly java:/magenta/datasource/test-distance-calculator .

Overview
Design and implement web service (REST) application for distance calculation:
(Разработать и внедрить приложение веб-сервиса (REST) для расчета расстояния:)

Database holds two entities:
*City
    Name
    *Latitude
    *Longitude
*Distance
    *From city
    *To city
    *Distance

Application should make it possible to calculate the distance in two ways:
(Приложение должно позволять вычислять расстояние двумя способами:)
   *“Crowflight” (straight distance) between cities. Lookup formula for distance calculation on the sphere in the internet.
    (“Кроуфлайт” (расстояние по прямой) между городами. Найдите формулу для расчета расстояния на сфере в Интернете.)
   *Lookup distance between two cities via “distance matrix” (distance table in the database)
    (Поиск расстояния между двумя городами с помощью “матрицы расстояний” (таблица расстояний в базе данных))

API has 3 endpoints:
   *List of all cities in the DB. Fields:
        *ID
        *Name
   *Calculate distance
       *Input:
            *Calculation Type: <Crowflight, Distance Matrix, All>
            *From City: <List of cities>
            *To City: <List of Cities>
       *Output:
            *Results: all distance calculation results as requested

   *Upload data to the DB. Uploads XML file with cities and distances into the application. Application parses it and stores it into the database.
    (Загрузка данных в базу данных. Загружает XML-файл с городами и расстояниями в приложение. Приложение парсит его и сохраняет в базе данных.)
       *Input:
           *Multipart/form-data form submission with single “File” input.
                (Составная часть/форма - отправка формы данных с одним вводом “файла”.)
       *Output:
           HTTP response code 200 without body

Новая версия
Tools/Libraries
*IDEA Community Edition
*Git
*Maven
*MySQL DB
*Liquibase для миграции к структуре DB
*Java 8 (можно использовать более свежие версии)
*JAXB или Jackson ObjectMapper
*Hibernate



Выбрать одно из двух:
    *JEE 8 + WildFly 14 (для реализации API использовать JAX-RS)
    *SpringBoot + Tomcat

Requirements
    *Use Java exceptions to indicate that distance cannot be calculated (for example, it is not in the distance table).
     (Используйте исключения Java, чтобы указать, что расстояние не может быть вычислено (например, его нет в таблице расстояний).)
    *Make sure you are up to speed on the following Java basics: interfaces, classes, inheritance, overriding, collections.
     (Убедитесь, что вы в курсе следующих основ Java: интерфейсы, классы, наследование, переопределение, коллекции.)

Optional Requirements
The following requirements are optional. Please work on them if you have capacity (after you submitted result of your assignment back to us):
    Test if your application would scale to 10.000 cities and 1.000.000 entries in distance table (assume that distance is defined only for some cities in the distance matrix). Test if XML file of this size can be loaded fine. Fix scale/performance issues if they would appear.
(Следующие требования являются необязательными. Пожалуйста, поработайте над ними, если у вас есть возможности (после того, как вы отправили нам результат своего задания обратно):
 Проверьте, будет ли ваше приложение масштабироваться до 10 000 городов и 1.000.000 записей в таблице расстояний
 (предположим, что расстояние определено только для некоторых городов в матрице расстояний). Проверьте, может ли XML-файл такого размера быть нормально загружен.
 Исправьте проблемы с масштабированием / производительностью, если они появятся.)